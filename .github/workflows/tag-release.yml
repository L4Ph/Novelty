name: Tag Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  tag-release:
    # Run only when a PR on a 'release/' branch is merged into main
    if: github.event.pull_request.merged == true && startsWith(github.event.pull_request.head.ref, 'release/')
    runs-on: ubuntu-latest
    permissions:
      contents: write # to push tags
      id-token: write # for auth

    steps:
      # 1. Checkout the main branch
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: 'main'

      # 2. Generate GitHub App token
      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}
      
      # 3. Get GitHub App info
      - name: Get GitHub App info
        id: app_info
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          APP_SLUG=$(gh api /app --jq .slug)
          USER_ID=$(gh api "/users/${APP_SLUG}[bot]" --jq .id)
          echo "app_slug=${APP_SLUG}" >> $GITHUB_OUTPUT
          echo "user_id=${USER_ID}" >> $GITHUB_OUTPUT

      # 4. Get version from pubspec.yaml and create tag
      - name: Get version and create tag
        id: get_version
        run: |
          # Extract just the version part (e.g., 1.2.3) from "1.2.3+8"
          VERSION_PART=$(yq '.version' pubspec.yaml | cut -d'+' -f1)
          TAG="v${VERSION_PART}"
          echo "tag=$TAG" >> $GITHUB_OUTPUT

      # 5. Push the new tag
      - name: Push new tag
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git config user.name "${{ steps.app_info.outputs.app_slug }}[bot]"
          git config user.email "${{ steps.app_info.outputs.user_id }}+${{ steps.app_info.outputs.app_slug }}[bot]@users.noreply.github.com"
          git tag ${{ steps.get_version.outputs.tag }} -m "Release ${{ steps.get_version.outputs.tag }}"
          git push "https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }}" ${{ steps.get_version.outputs.tag }}
