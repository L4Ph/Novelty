name: Release

on:
  push:
    tags:
      - 'v*' # e.g. v1.2.3

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # to create release
      id-token: write # for auth

    steps:
      # 1. Checkout repository at the specific tag
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          ref: ${{ github.ref }} # Checkout the tag that triggered the workflow

      # 2. Get version from tag
      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      # 3. Generate GitHub App token
      - name: Generate GitHub App token
        id: generate-token
        uses: actions/create-github-app-token@v2
        with:
          app-id: ${{ secrets.APP_ID }}
          private-key: ${{ secrets.APP_PRIVATE_KEY }}

      # 4. Set up Flutter environment and build
      - name: Set up Flutter
        run: |
          curl -fsSL https://fvm.app/install.sh | bash
          fvm install
      - name: Get Flutter packages
        run: fvm flutter pub get
      - name: Decode Keystore
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/app/upload-keystore.jks
          echo "STORE_FILE=upload-keystore.jks" >> $GITHUB_ENV
      - name: Build Android Release Files
        run: |
          # The version name is derived from the tag
          VERSION_NAME=$(echo "${{ steps.get_version.outputs.VERSION }}" | sed 's/^v//')
          fvm flutter build apk --release --split-per-abi \
            --build-name=$VERSION_NAME \
            --dart-define=NOVELTY_API_URL=${{ secrets.NOVELTY_API_URL }}
          fvm flutter build appbundle --release \
            --build-name=$VERSION_NAME \
            --dart-define=NOVELTY_API_URL=${{ secrets.NOVELTY_API_URL }}
        env:
          KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

      # 5. Create GitHub Release
      - name: Create GitHub Release
        env:
          GH_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          gh release create "${{ steps.get_version.outputs.VERSION }}" \
            --title "Release ${{ steps.get_version.outputs.VERSION }}" \
            --notes "New release version." \
            build/app/outputs/bundle/release/app-release.aab \
            build/app/outputs/flutter-apk/app-armeabi-v7a-release.apk \
            build/app/outputs/flutter-apk/app-arm64-v8a-release.apk \
            build/app/outputs/flutter-apk/app-x86_64-release.apk