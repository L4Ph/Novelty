name: Create PR from Issue

on:
  issue_comment:
    types: [created]

jobs:
  run_on_command:
    if: >
      github.event_name == 'issue_comment' &&
      !github.event.issue.pull_request &&
      contains(github.event.comment.body, '@gemini-cli /assign') &&
      github.event.comment.author_association == 'OWNER'
    timeout-minutes: 15
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      issues: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Flutter
        run: |
          curl -fsSL https://fvm.app/install.sh | bash
          fvm install

      - name: Configure Git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Create file from issue
        uses: google-gemini/gemini-cli-action@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
          REPOSITORY: ${{ github.repository }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_BODY: ${{ github.event.issue.body }}
        with:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
          prompt: |
            あなたはこのリポジトリ(`${{env.REPOSITORY}}`)のメンテナです。

            **重要：あなたが行うべき唯一の操作は、${{env.ISSUE_TITLE}}に対する問題の解決と、それが完了した後にコミット、プッシュし、Pull Requestを開くだけです。それ以外の操作は一切行わないでください。**
            
            ## タスク
            1. `git checkout -b gemini/${{env.ISSUE_NUMBER}}-{branch_name}` という名称でブランチを作成してください。{branch_name}は、${{env.ISSUE_TITLE}}から適切な英語のPR名をつけてください。
            2. `${{env.ISSUE_TITLE}}`というタイトルからどのような問題を解決するべきかを考えてください。${{env.ISSUE_BODY}}がある場合はこれも確認してください。
            3. 2で確認した事項を元に、実装してください。
            4. 作業が完了したら、`fvm flutter analyze`を実行し、エラーがないことを確認してください。今回変更したファイルに関係ないInfoについては無視してください。
            5. コミットとプッシュを実施してください。
            6. Pull Requestを開いてください。

            **重要: コミットとプッシュ**
            ```sh
            git add .
            git commit -m "{ 今回の変更内容を記述してください。 }"
            git push origin gemini/${{env.ISSUE_NUMBER}}-{branch_name}
            ```

            **重要: Pull Requestの開き方について**
            ```sh
            gh auth login --with-token <<< "$GITHUB_TOKEN"
            gh pr create \
              --title "#${{ env.ISSUE_NUMBER }} - { 変更内容の要約 }" \
              --body "Closes #${{ env.ISSUE_NUMBER }}" \
              --base main \
              --head gemini/${{env.ISSUE_NUMBER}}-{branch_name} \
              --assignee "@me"
            ```