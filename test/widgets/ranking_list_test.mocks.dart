// Mocks generated by Mockito 5.4.6 from annotations
// in novelty/test/widgets/ranking_list_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:mockito/mockito.dart' as _i1;
import 'package:novelty/models/episode.dart' as _i3;
import 'package:novelty/models/novel_info.dart' as _i2;
import 'package:novelty/models/novel_search_query.dart' as _i7;
import 'package:novelty/models/ranking_response.dart' as _i6;
import 'package:novelty/services/api_service.dart' as _i4;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNovelInfo_0 extends _i1.SmartFake implements _i2.NovelInfo {
  _FakeNovelInfo_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeEpisode_1 extends _i1.SmartFake implements _i3.Episode {
  _FakeEpisode_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [ApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockApiService extends _i1.Mock implements _i4.ApiService {
  MockApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<Map<String, _i2.NovelInfo>> fetchMultipleNovelsInfo(
    List<String>? ncodes,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#fetchMultipleNovelsInfo, [ncodes]),
            returnValue: _i5.Future<Map<String, _i2.NovelInfo>>.value(
              <String, _i2.NovelInfo>{},
            ),
          )
          as _i5.Future<Map<String, _i2.NovelInfo>>);

  @override
  _i5.Future<_i2.NovelInfo> fetchBasicNovelInfo(String? ncode) =>
      (super.noSuchMethod(
            Invocation.method(#fetchBasicNovelInfo, [ncode]),
            returnValue: _i5.Future<_i2.NovelInfo>.value(
              _FakeNovelInfo_0(
                this,
                Invocation.method(#fetchBasicNovelInfo, [ncode]),
              ),
            ),
          )
          as _i5.Future<_i2.NovelInfo>);

  @override
  _i5.Future<List<_i3.Episode>> fetchEpisodeList(String? ncode, int? page) =>
      (super.noSuchMethod(
            Invocation.method(#fetchEpisodeList, [ncode, page]),
            returnValue: _i5.Future<List<_i3.Episode>>.value(<_i3.Episode>[]),
          )
          as _i5.Future<List<_i3.Episode>>);

  @override
  _i5.Future<_i2.NovelInfo> fetchNovelInfo(String? ncode) =>
      (super.noSuchMethod(
            Invocation.method(#fetchNovelInfo, [ncode]),
            returnValue: _i5.Future<_i2.NovelInfo>.value(
              _FakeNovelInfo_0(
                this,
                Invocation.method(#fetchNovelInfo, [ncode]),
              ),
            ),
          )
          as _i5.Future<_i2.NovelInfo>);

  @override
  _i5.Future<_i3.Episode> fetchEpisode(String? ncode, int? episode) =>
      (super.noSuchMethod(
            Invocation.method(#fetchEpisode, [ncode, episode]),
            returnValue: _i5.Future<_i3.Episode>.value(
              _FakeEpisode_1(
                this,
                Invocation.method(#fetchEpisode, [ncode, episode]),
              ),
            ),
          )
          as _i5.Future<_i3.Episode>);

  @override
  _i5.Future<List<_i6.RankingResponse>> searchNovels(
    _i7.NovelSearchQuery? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchNovels, [query]),
            returnValue: _i5.Future<List<_i6.RankingResponse>>.value(
              <_i6.RankingResponse>[],
            ),
          )
          as _i5.Future<List<_i6.RankingResponse>>);

  @override
  _i5.Future<List<_i6.RankingResponse>> fetchRanking(String? rankingType) =>
      (super.noSuchMethod(
            Invocation.method(#fetchRanking, [rankingType]),
            returnValue: _i5.Future<List<_i6.RankingResponse>>.value(
              <_i6.RankingResponse>[],
            ),
          )
          as _i5.Future<List<_i6.RankingResponse>>);
}
